var N=null,E="",T="t",U="u",searchIndex={};
var R=["rand_core","errorkind","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","usize","Implement `fill_bytes` by reading chunks from the output…","try_from","result","borrow_mut","try_into","rand_core::block","to_owned","clone_into","type_id","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","rngcore","blockrng","blockrng64","formatter","description","stderror","serialize","deserialize","ErrorKind","BlockRng","BlockRng64","BlockRngCore","SeedableRng","rand_jitter","jitterrng","timererror","TimerError","JitterRng","to_string","borrow","typeid","rand_xorshift","XorShiftRng","rand_isaac","rand_isaac::isaac","rand_isaac::isaac64","generate","Refills the output buffer, `results`. See also the…","isaacarray","Create an ISAAC random number generator using an `u64` as…","IsaacRng","IsaacCore","Isaac64Rng","Isaac64Core","Hc128Rng","Hc128Core","rand_xoshiro","Jump forward, equivalently to 2^64 calls to `next_u32()`.","Jump forward, equivalently to 2^128 calls to `next_u64()`.","long_jump","Jump forward, equivalently to 2^192 calls to `next_u64()`.","Jump forward, equivalently to 2^256 calls to `next_u64()`.","Jump forward, equivalently to 2^64 calls to `next_u64()`.","Jump forward, equivalently to 2^96 calls to `next_u64()`.","splitmix64","xoshiro128starstar","xoshiro128plus","xoshiro256starstar","xoshiro256plus","seed512","xoshiro512starstar","xoshiro512plus","xoroshiro128plus","xoroshiro128starstar","xoroshiro64starstar","xoroshiro64star","Xoshiro128StarStar","Xoshiro128Plus","Xoshiro256StarStar","Xoshiro256Plus","Xoshiro512StarStar","Xoshiro512Plus","Xoroshiro128Plus","Xoroshiro128StarStar","SplitMix64","Xoroshiro64StarStar","Xoroshiro64Star","rand_chacha","chachacore","ChaChaRng","ChaChaCore","A cryptographically secure random number generator that…","rand_pcg","Lcg64Xsh32","Mcg128Xsl64","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","rand::distributions","bernoulli","WeightedIndex","A distribution using weighted sampling to pick a…","weightederror","rand::distributions::weighted","weightedindex","dirichlet","rand::rngs","rand::seq","choose_multiple","sample_iter","Fill `dest` entirely with random bytes (uniform value…","from_cast","from_bits","into_bits","rand::distributions::uniform","into_iter","rand::distributions::weighted::alias_method","from_entropy","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","threadrng","uniform","unitspheresurface","unitcircle","chisquared","lognormal","triangular","indexvec","indexvecintoiter","size_hint","SampleUniform","UniformSampler","SampleBorrow","Bernoulli","WeightedError","UnitSphereSurface","UnitCircle","ChiSquared","LogNormal","Dirichlet","Triangular","Distribution","ReseedingRng","EntropyRng","SliceRandom","IteratorRandom","AsByteSliceMut","FromEntropy","Alphanumeric","OpenClosed01","StandardNormal","UniformInt","UniformFloat","UniformDuration","ThreadRng","SliceChooseIter","IndexVecIter","IndexVecIntoIter","A random number generator that retrieves randomness from…","Create a new `OsRng`.","Error type of random number generators","The error kind","The error message","Error kind which can be matched over.","Unavailable","Feature is not available; not recoverable.","Unexpected","General failure; there may be a chance of recovery on retry.","Transient","A transient failure which likely can be resolved or worked…","Not ready yet: recommended to try again a little later.","should_retry","True if this kind of error may resolve itself on retry.","should_wait","True if we should retry but wait before retrying","A description of this error kind","Create a new instance, with specified kind and a message.","with_cause","Create a new instance, with specified kind, message, and a…","take_cause","Take the cause, if any. This allows the embedded cause to…","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` with random data.","Fill `dest` entirely with random data.","CryptoRng","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","rand_wasm_bindgen_test","rand_distr","Types (distributions) that can be used to create a random…","Generate a random value of `T`, using `rng` as the source…","Create an iterator that generates random values of `T`,…","distiter","DistIter","An iterator that generates random values of `T` with…","Standard","A generic random value distribution, implemented for many…","Sample a `char`, uniformly distributed over ASCII letters…","The Bernoulli distribution.","This module contains different algorithms for sampling…","alias_method","This module contains an implementation of alias method for…","Trait that must be implemented for weights, that are used…","Maximum number representable by `Self`.","Element of `Self` equivalent to 0.","try_from_usize_lossy","Produce an instance of `Self` from a `usize` value, or…","Sums all values in slice `values`.","rand_distr::weighted","Error type returned from `WeightedIndex::new`.","The provided weight collection contains no items.","InvalidWeight","A weight is either less than zero, greater than the…","AllWeightsZero","All items in the provided weight collection are zero.","Samples uniformly from the surface of the unit sphere in…","Samples uniformly from the edge of the unit circle in two…","The Gamma distribution `Gamma(shape, scale)` distribution.","The chi-squared distribution `χ²(k)`, where `k` is the…","The Fisher F distribution `F(m, n)`.","StudentT","The Student t distribution, `t(nu)`, where `nu` is the…","The Beta distribution with shape parameters `alpha` and…","The normal distribution `N(mean, std_dev**2)`.","The log-normal distribution `ln N(mean, std_dev**2)`.","Samples floating-point numbers according to the normal…","The exponential distribution `Exp(lambda)`.","Samples floating-point numbers according to the…","Samples floating-point numbers according to the Pareto…","The Poisson distribution `Poisson(lambda)`.","Binomial","The binomial distribution `Binomial(n, p)`.","The Cauchy distribution `Cauchy(median, scale)`.","The dirichelet distribution `Dirichlet(alpha)`.","The triangular distribution.","Samples floating-point numbers according to the Weibull…","Construct an object representing the `Gamma(shape, scale)`…","Create a new chi-squared distribution with…","Create a new `FisherF` distribution, with the given…","Create a new Student t distribution with `n` degrees of…","studentt","Construct an object representing the `Beta(alpha, beta)`…","Construct a new `Normal` distribution with the given mean…","Construct a new `LogNormal` distribution with the given…","Construct a new `Exp` with the given shape parameter…","Construct a new Pareto distribution with given `scale` and…","Construct a new `Poisson` with the given shape parameter…","Construct a new `Binomial` with the given shape parameters…","binomial","Construct a new `Cauchy` with the given shape parameters…","Construct a new `Dirichlet` with the given alpha parameter…","new_with_param","Construct a new `Dirichlet` with the given shape parameter…","Construct a new `Triangular` with minimum `min`, maximum…","Construct a new `Weibull` distribution with given `scale`…","rand_distr::weighted::alias_method","openclosed01","rangeinclusive","nonzerou128","nonzerou8","nonzerou16","nonzerou32","nonzerousize","nonzerou64","standardnormal","Construct a new `Bernoulli` with the given probability of…","from_ratio","Construct a new `Bernoulli` with the probability of…","Creates a new [`WeightedIndex`].","Creates a new a `WeightedIndex` [`Distribution`] using the…"];
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[190],N,N],[10,R[19],E,R[191],0,[[["self"]],["u32"]]],[10,R[20],E,R[192],0,[[["self"]],["u64"]]],[10,R[21],E,R[193],0,[[["self"]]]],[10,R[22],E,R[194],0,[[["self"]],[[R[12],["error"]],["error"]]]],[8,R[195],E,R[196],N,N],[8,R[38],E,R[197],N,N],[16,"Seed",E,R[198],1,N],[10,R[23],E,R[199],1,[[],["self"]]],[11,R[24],E,R[200],1,[[["u64"]],["self"]]],[11,R[25],E,R[201],1,[[["r"]],[[R[12],["error"]],["error"]]]],[4,R[34],E,R[172],N,N],[13,R[173],E,R[174],2,N],[13,R[175],E,R[176],2,N],[13,R[177],E,R[178],2,N],[13,"NotReady",E,R[179],2,N],[3,"Error",E,R[169],N,N],[12,"kind",E,R[170],3,N],[12,"msg",E,R[171],3,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[129]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions",N,N],[3,R[157],R[105],R[212],N,N],[3,"Uniform",E,R[102],N,N],[3,R[158],E,R[101],N,N],[3,"Open01",E,R[101],N,N],[3,R[142],E,R[213],N,N],[3,R[144],E,R[230],N,N],[3,R[145],E,R[231],N,N],[3,"Gamma",E,R[232],N,N],[3,R[146],E,R[233],N,N],[3,"FisherF",E,R[234],N,N],[3,R[235],E,R[236],N,N],[3,"Beta",E,R[237],N,N],[3,"Normal",E,R[238],N,N],[3,R[147],E,R[239],N,N],[3,R[159],E,R[240],N,N],[3,"Exp",E,R[241],N,N],[3,"Exp1",E,R[242],N,N],[3,"Pareto",E,R[243],N,N],[3,"Poisson",E,R[244],N,N],[3,R[245],E,R[246],N,N],[3,"Cauchy",E,R[247],N,N],[3,R[148],E,R[248],N,N],[3,R[149],E,R[249],N,N],[3,"Weibull",E,R[250],N,N],[3,R[208],E,R[209],N,N],[3,R[210],E,R[211],N,N],[0,R[130],E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[121],R[102],N,N],[3,R[160],E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[161],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[162],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[139],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",4,N],[8,R[140],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",5,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",5,[[["b1"],["b2"]],["self"]]],[10,R[103],E,"Construct self, with inclusive bounds `[low, high]`.",5,[[["b1"],["b2"]],["self"]]],[10,"sample",E,"Sample a value.",5,[[["r"],["self"]]]],[11,R[128],E,"Sample a single value uniformly from a range with…",5,[[["b1"],["r"],["b2"]]]],[8,R[141],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[45],E,"Immutably borrows from an owned value. See…",6,[[["self"]],["borrowed"]]],[11,"new",E,R[104],7,[[["b1"],["b2"]],[R[130]]]],[11,R[103],E,R[104],7,[[["b1"],["b2"]],[R[130]]]],[11,"new",R[105],R[280],8,[[["f64"]],[R[106]]]],[11,R[281],E,R[282],8,[[["u32"]],[R[106]]]],[0,"weighted",E,R[214],N,N],[3,R[107],R[110],R[108],N,N],[4,R[143],E,R[224],N,N],[13,"NoItem",E,R[225],9,N],[13,R[226],E,R[227],9,N],[13,R[228],E,R[229],9,N],[0,R[215],E,R[216],N,N],[3,R[107],R[123],R[108],N,N],[8,"Weight",E,R[217],N,N],[18,"MAX",E,R[218],10,N],[18,"ZERO",E,R[219],10,N],[10,R[220],E,R[221],10,[[[R[9]]],["option"]]],[11,"sum",E,R[222],10,[[],["self"]]],[11,"new",E,R[283],11,[[["vec"]],[[R[12],[R[109]]],[R[109]]]]],[11,"new",R[110],R[284],12,[[["i"]],[[R[12],[R[111],R[109]]],[R[109]],[R[111]]]]],[11,"new",R[105],"Construct a new `UnitSphereSurface` distribution.",13,[[],[R[131]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",14,[[],[R[132]]]],[11,"new",E,R[251],15,[[["f64"]],["gamma"]]],[11,"new",E,R[252],16,[[["f64"]],[R[133]]]],[11,"new",E,R[253],17,[[["f64"]],["fisherf"]]],[11,"new",E,R[254],18,[[["f64"]],[R[255]]]],[11,"new",E,R[256],19,[[["f64"]],["beta"]]],[11,"new",E,R[257],20,[[["f64"]],["normal"]]],[11,"new",E,R[258],21,[[["f64"]],[R[134]]]],[11,"new",E,R[259],22,[[["f64"]],["exp"]]],[11,"new",E,R[260],23,[[["f64"]],["pareto"]]],[11,"new",E,R[261],24,[[["f64"]],["poisson"]]],[11,"new",E,R[262],25,[[["f64"],["u64"]],[R[263]]]],[11,"new",E,R[264],26,[[["f64"]],["cauchy"]]],[11,"new",E,R[265],27,[[["into",["vec"]],["vec",["f64"]]],[R[112]]]],[11,R[266],E,R[267],27,[[["f64"],[R[9]]],[R[112]]]],[11,"new",E,R[268],28,[[["f64"]],[R[135]]]],[11,"new",E,R[269],29,[[["f64"]],["weibull"]]],[8,R[150],E,R[204],N,N],[10,"sample",E,R[205],30,[[["r"],["self"]],[T]]],[11,R[116],E,R[206],30,[[["r"]],[R[207]]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"rngs",E,"Random number generators and adapters",N,N],[3,R[152],R[113],"An interface returning random data from external…",N,N],[3,"SmallRng",E,"An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,R[163],E,"The type returned by [`thread_rng`], essentially just a…",N,N],[3,"OsRng",E,R[167],N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[125],"An RNG that reads random bytes straight from any type…",N,N],[3,R[151],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",31,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",32,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",32,[[["self"]],[[R[12],["error"]],["error"]]]],[11,"new",R[113],"Create a new `EntropyRng`.",33,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[126],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",34,[[["u64"]],["self"]]],[11,"new",R[113],R[168],35,[[],[["osrng"],[R[12],["osrng","error"]],["error"]]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,R[164],R[114],"Iterator over multiple choices, as returned by…",N,N],[0,"index",E,"Index sampling",N,N],[4,"IndexVec",R[127],"A vector of indices.",N,N],[4,R[165],E,"Return type of `IndexVec::iter`.",N,N],[4,R[166],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],[R[9]]],[R[136]]]],[11,"len",E,"Returns the number of indices",36,[[["self"]],[R[9]]]],[11,"index",E,"Return the value at the given `index`.",36,[[["self"],[R[9]]],[R[9]]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",36,[[],[["vec",[R[9]]],[R[9]]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,R[122],E,"Convert into an iterator over the indices as a sequence of…",36,[[],[R[137]]]],[8,R[153],R[114],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",37,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",37,[[["r"],["self"]],["option"]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",37,[[["r"],["self"]],["option"]]],[10,R[115],E,"Produces an iterator that chooses `amount` elements from…",37,[[["r"],["self"],[R[9]]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], where the likelihood of each…",37,[[["r"],["self"],["f"]],[[R[109]],[R[12],[R[109]]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], where the likelihood of each…",37,[[["r"],["self"],["f"]],[[R[12],[R[109]]],[R[109]]]]],[10,"shuffle",E,"Shuffle a mutable slice in place.",37,[[["r"],["self"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",37,[[["r"],["self"],[R[9]]]]],[8,R[154],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator. If you…",38,[[["r"]],["option"]]],[11,"choose_multiple_fill",E,"Collects values at random from the iterator into a…",38,[[["r"]],[R[9]]]],[11,R[115],E,"Collects `amount` values at random from the iterator into…",38,[[["r"],[R[9]]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",39,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",39,[[["b1"],["self"],["b2"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",39,[[["distribution"],["self"]],[T]]],[11,R[116],E,"Create an iterator that generates values using the given…",39,[[["d"]],[R[207]]]],[11,"fill",E,R[117],39,[[["self"],[T]]]],[11,"try_fill",E,R[117],39,[[["self"],[T]],[[R[12],["error"]],["error"]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",39,[[["u32"],["self"]],["bool"]]],[8,R[155],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",40,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,R[156],E,"A convenience extension to [`SeedableRng`] allowing…",N,N],[10,R[124],E,"Creates a new instance of the RNG seeded from [`OsRng`].",41,[[],["self"]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[46]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[118],E,E,2,[[[T]],[T]]],[11,"cast",E,E,2,[[],[U]]],[11,R[119],E,E,2,[[[T]],[T]]],[11,R[120],E,E,2,[[],[U]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[44],E,E,3,[[["self"]],["string"]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[46]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[118],E,E,3,[[[T]],[T]]],[11,"cast",E,E,3,[[],[U]]],[11,R[119],E,E,3,[[[T]],[T]]],[11,R[120],E,E,3,[[],[U]]],[11,"into",R[105],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[[U]],[R[12]]]],[11,R[45],E,E,42,[[["self"]],[T]]],[11,R[18],E,E,42,[[["self"]],[R[46]]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[],[R[12]]]],[11,R[118],E,E,42,[[[T]],[T]]],[11,"cast",E,E,42,[[],[U]]],[11,R[119],E,E,42,[[[T]],[T]]],[11,R[120],E,E,42,[[],[U]]],[11,"into",R[121],E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[46]]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[118],E,E,7,[[[T]],[T]]],[11,"cast",E,E,7,[[],[U]]],[11,R[119],E,E,7,[[[T]],[T]]],[11,R[120],E,E,7,[[],[U]]],[11,"into",R[105],E,43,[[],[U]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[17],E,E,43,[[[T],["self"]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[11],E,E,43,[[[U]],[R[12]]]],[11,R[45],E,E,43,[[["self"]],[T]]],[11,R[18],E,E,43,[[["self"]],[R[46]]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[],[R[12]]]],[11,R[118],E,E,43,[[[T]],[T]]],[11,"cast",E,E,43,[[],[U]]],[11,R[119],E,E,43,[[[T]],[T]]],[11,R[120],E,E,43,[[],[U]]],[11,"into",E,E,44,[[],[U]]],[11,R[16],E,E,44,[[["self"]],[T]]],[11,R[17],E,E,44,[[[T],["self"]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[11],E,E,44,[[[U]],[R[12]]]],[11,R[45],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[R[46]]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[],[R[12]]]],[11,R[118],E,E,44,[[[T]],[T]]],[11,"cast",E,E,44,[[],[U]]],[11,R[119],E,E,44,[[[T]],[T]]],[11,R[120],E,E,44,[[],[U]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[46]]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[118],E,E,8,[[[T]],[T]]],[11,"cast",E,E,8,[[],[U]]],[11,R[119],E,E,8,[[[T]],[T]]],[11,R[120],E,E,8,[[],[U]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[46]]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[118],E,E,13,[[[T]],[T]]],[11,"cast",E,E,13,[[],[U]]],[11,R[119],E,E,13,[[[T]],[T]]],[11,R[120],E,E,13,[[],[U]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[46]]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[118],E,E,14,[[[T]],[T]]],[11,"cast",E,E,14,[[],[U]]],[11,R[119],E,E,14,[[[T]],[T]]],[11,R[120],E,E,14,[[],[U]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[46]]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[118],E,E,15,[[[T]],[T]]],[11,"cast",E,E,15,[[],[U]]],[11,R[119],E,E,15,[[[T]],[T]]],[11,R[120],E,E,15,[[],[U]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[46]]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[118],E,E,16,[[[T]],[T]]],[11,"cast",E,E,16,[[],[U]]],[11,R[119],E,E,16,[[[T]],[T]]],[11,R[120],E,E,16,[[],[U]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[46]]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[118],E,E,17,[[[T]],[T]]],[11,"cast",E,E,17,[[],[U]]],[11,R[119],E,E,17,[[[T]],[T]]],[11,R[120],E,E,17,[[],[U]]],[11,"into",E,E,18,[[],[U]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[17],E,E,18,[[[T],["self"]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[46]]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[118],E,E,18,[[[T]],[T]]],[11,"cast",E,E,18,[[],[U]]],[11,R[119],E,E,18,[[[T]],[T]]],[11,R[120],E,E,18,[[],[U]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[46]]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[118],E,E,19,[[[T]],[T]]],[11,"cast",E,E,19,[[],[U]]],[11,R[119],E,E,19,[[[T]],[T]]],[11,R[120],E,E,19,[[],[U]]],[11,"into",E,E,20,[[],[U]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[17],E,E,20,[[[T],["self"]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[46]]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[118],E,E,20,[[[T]],[T]]],[11,"cast",E,E,20,[[],[U]]],[11,R[119],E,E,20,[[[T]],[T]]],[11,R[120],E,E,20,[[],[U]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[46]]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[118],E,E,21,[[[T]],[T]]],[11,"cast",E,E,21,[[],[U]]],[11,R[119],E,E,21,[[[T]],[T]]],[11,R[120],E,E,21,[[],[U]]],[11,"into",E,E,45,[[],[U]]],[11,R[16],E,E,45,[[["self"]],[T]]],[11,R[17],E,E,45,[[[T],["self"]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[11],E,E,45,[[[U]],[R[12]]]],[11,R[45],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[R[46]]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[],[R[12]]]],[11,R[118],E,E,45,[[[T]],[T]]],[11,"cast",E,E,45,[[],[U]]],[11,R[119],E,E,45,[[[T]],[T]]],[11,R[120],E,E,45,[[],[U]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[46]]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[118],E,E,22,[[[T]],[T]]],[11,"cast",E,E,22,[[],[U]]],[11,R[119],E,E,22,[[[T]],[T]]],[11,R[120],E,E,22,[[],[U]]],[11,"into",E,E,46,[[],[U]]],[11,R[16],E,E,46,[[["self"]],[T]]],[11,R[17],E,E,46,[[[T],["self"]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[[U]],[R[12]]]],[11,R[45],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[R[46]]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[],[R[12]]]],[11,R[118],E,E,46,[[[T]],[T]]],[11,"cast",E,E,46,[[],[U]]],[11,R[119],E,E,46,[[[T]],[T]]],[11,R[120],E,E,46,[[],[U]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[46]]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[118],E,E,23,[[[T]],[T]]],[11,"cast",E,E,23,[[],[U]]],[11,R[119],E,E,23,[[[T]],[T]]],[11,R[120],E,E,23,[[],[U]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[46]]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[118],E,E,24,[[[T]],[T]]],[11,"cast",E,E,24,[[],[U]]],[11,R[119],E,E,24,[[[T]],[T]]],[11,R[120],E,E,24,[[],[U]]],[11,"into",E,E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[46]]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[118],E,E,25,[[[T]],[T]]],[11,"cast",E,E,25,[[],[U]]],[11,R[119],E,E,25,[[[T]],[T]]],[11,R[120],E,E,25,[[],[U]]],[11,"into",E,E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[46]]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[118],E,E,26,[[[T]],[T]]],[11,"cast",E,E,26,[[],[U]]],[11,R[119],E,E,26,[[[T]],[T]]],[11,R[120],E,E,26,[[],[U]]],[11,"into",E,E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[46]]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[118],E,E,27,[[[T]],[T]]],[11,"cast",E,E,27,[[],[U]]],[11,R[119],E,E,27,[[[T]],[T]]],[11,R[120],E,E,27,[[],[U]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[46]]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[118],E,E,28,[[[T]],[T]]],[11,"cast",E,E,28,[[],[U]]],[11,R[119],E,E,28,[[[T]],[T]]],[11,R[120],E,E,28,[[],[U]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[46]]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[118],E,E,29,[[[T]],[T]]],[11,"cast",E,E,29,[[],[U]]],[11,R[119],E,E,29,[[[T]],[T]]],[11,R[120],E,E,29,[[],[U]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[122],E,E,47,[[],["i"]]],[11,R[11],E,E,47,[[[U]],[R[12]]]],[11,R[45],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[R[46]]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[],[R[12]]]],[11,R[118],E,E,47,[[[T]],[T]]],[11,"cast",E,E,47,[[],[U]]],[11,R[119],E,E,47,[[[T]],[T]]],[11,R[120],E,E,47,[[],[U]]],[11,"into",E,E,48,[[],[U]]],[11,R[16],E,E,48,[[["self"]],[T]]],[11,R[17],E,E,48,[[[T],["self"]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[11],E,E,48,[[[U]],[R[12]]]],[11,R[45],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[R[46]]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[],[R[12]]]],[11,R[118],E,E,48,[[[T]],[T]]],[11,"cast",E,E,48,[[],[U]]],[11,R[119],E,E,48,[[[T]],[T]]],[11,R[120],E,E,48,[[],[U]]],[11,"into",R[121],E,49,[[],[U]]],[11,R[16],E,E,49,[[["self"]],[T]]],[11,R[17],E,E,49,[[[T],["self"]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[11],E,E,49,[[[U]],[R[12]]]],[11,R[45],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[R[46]]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[],[R[12]]]],[11,R[118],E,E,49,[[[T]],[T]]],[11,"cast",E,E,49,[[],[U]]],[11,R[119],E,E,49,[[[T]],[T]]],[11,R[120],E,E,49,[[],[U]]],[11,"into",E,E,50,[[],[U]]],[11,R[16],E,E,50,[[["self"]],[T]]],[11,R[17],E,E,50,[[[T],["self"]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[11],E,E,50,[[[U]],[R[12]]]],[11,R[45],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[R[46]]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[],[R[12]]]],[11,R[118],E,E,50,[[[T]],[T]]],[11,"cast",E,E,50,[[],[U]]],[11,R[119],E,E,50,[[[T]],[T]]],[11,R[120],E,E,50,[[],[U]]],[11,"into",E,E,51,[[],[U]]],[11,R[16],E,E,51,[[["self"]],[T]]],[11,R[17],E,E,51,[[[T],["self"]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[11],E,E,51,[[[U]],[R[12]]]],[11,R[45],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[R[46]]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[],[R[12]]]],[11,R[118],E,E,51,[[[T]],[T]]],[11,"cast",E,E,51,[[],[U]]],[11,R[119],E,E,51,[[[T]],[T]]],[11,R[120],E,E,51,[[],[U]]],[11,"into",R[110],E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[46]]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[118],E,E,12,[[[T]],[T]]],[11,"cast",E,E,12,[[],[U]]],[11,R[119],E,E,12,[[[T]],[T]]],[11,R[120],E,E,12,[[],[U]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[44],E,E,9,[[["self"]],["string"]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[46]]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[118],E,E,9,[[[T]],[T]]],[11,"cast",E,E,9,[[],[U]]],[11,R[119],E,E,9,[[[T]],[T]]],[11,R[120],E,E,9,[[],[U]]],[11,"into",R[123],E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[46]]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[118],E,E,11,[[[T]],[T]]],[11,"cast",E,E,11,[[],[U]]],[11,R[119],E,E,11,[[[T]],[T]]],[11,R[120],E,E,11,[[],[U]]],[11,"into",R[113],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[11],E,E,33,[[[U]],[R[12]]]],[11,R[45],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[R[46]]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[],[R[12]]]],[11,R[118],E,E,33,[[[T]],[T]]],[11,"cast",E,E,33,[[],[U]]],[11,R[119],E,E,33,[[[T]],[T]]],[11,R[120],E,E,33,[[],[U]]],[11,R[124],E,E,52,[[],["r"]]],[11,"into",E,E,52,[[],[U]]],[11,R[16],E,E,52,[[["self"]],[T]]],[11,R[17],E,E,52,[[[T],["self"]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[11],E,E,52,[[[U]],[R[12]]]],[11,R[45],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[R[46]]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[],[R[12]]]],[11,R[118],E,E,52,[[[T]],[T]]],[11,"cast",E,E,52,[[],[U]]],[11,R[119],E,E,52,[[[T]],[T]]],[11,R[120],E,E,52,[[],[U]]],[11,R[124],E,E,53,[[],["r"]]],[11,"into",E,E,53,[[],[U]]],[11,R[16],E,E,53,[[["self"]],[T]]],[11,R[17],E,E,53,[[[T],["self"]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[11],E,E,53,[[[U]],[R[12]]]],[11,R[45],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[R[46]]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[],[R[12]]]],[11,R[118],E,E,53,[[[T]],[T]]],[11,"cast",E,E,53,[[],[U]]],[11,R[119],E,E,53,[[[T]],[T]]],[11,R[120],E,E,53,[[],[U]]],[11,"into",E,E,54,[[],[U]]],[11,R[16],E,E,54,[[["self"]],[T]]],[11,R[17],E,E,54,[[[T],["self"]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[11],E,E,54,[[[U]],[R[12]]]],[11,R[45],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[R[46]]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[],[R[12]]]],[11,R[118],E,E,54,[[[T]],[T]]],[11,"cast",E,E,54,[[],[U]]],[11,R[119],E,E,54,[[[T]],[T]]],[11,R[120],E,E,54,[[],[U]]],[11,"into",E,E,35,[[],[U]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[17],E,E,35,[[[T],["self"]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[[U]],[R[12]]]],[11,R[45],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[R[46]]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[],[R[12]]]],[11,R[118],E,E,35,[[[T]],[T]]],[11,"cast",E,E,35,[[],[U]]],[11,R[119],E,E,35,[[[T]],[T]]],[11,R[120],E,E,35,[[],[U]]],[11,"into",R[125],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[11],E,E,31,[[[U]],[R[12]]]],[11,R[45],E,E,31,[[["self"]],[T]]],[11,R[18],E,E,31,[[["self"]],[R[46]]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[],[R[12]]]],[11,R[118],E,E,31,[[[T]],[T]]],[11,"cast",E,E,31,[[],[U]]],[11,R[119],E,E,31,[[[T]],[T]]],[11,R[120],E,E,31,[[],[U]]],[11,"into",E,E,32,[[],[U]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[17],E,E,32,[[[T],["self"]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[11],E,E,32,[[[U]],[R[12]]]],[11,R[45],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[R[46]]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[],[R[12]]]],[11,R[118],E,E,32,[[[T]],[T]]],[11,"cast",E,E,32,[[],[U]]],[11,R[119],E,E,32,[[[T]],[T]]],[11,R[120],E,E,32,[[],[U]]],[11,"into",R[126],E,34,[[],[U]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[17],E,E,34,[[[T],["self"]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[11],E,E,34,[[[U]],[R[12]]]],[11,R[45],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[R[46]]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[],[R[12]]]],[11,R[118],E,E,34,[[[T]],[T]]],[11,"cast",E,E,34,[[],[U]]],[11,R[119],E,E,34,[[[T]],[T]]],[11,R[120],E,E,34,[[],[U]]],[11,"into",R[114],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[122],E,E,55,[[],["i"]]],[11,R[11],E,E,55,[[[U]],[R[12]]]],[11,R[45],E,E,55,[[["self"]],[T]]],[11,R[18],E,E,55,[[["self"]],[R[46]]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[],[R[12]]]],[11,R[118],E,E,55,[[[T]],[T]]],[11,"cast",E,E,55,[[],[U]]],[11,R[119],E,E,55,[[[T]],[T]]],[11,R[120],E,E,55,[[],[U]]],[11,"into",R[127],E,36,[[],[U]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[17],E,E,36,[[[T],["self"]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[11],E,E,36,[[[U]],[R[12]]]],[11,R[45],E,E,36,[[["self"]],[T]]],[11,R[18],E,E,36,[[["self"]],[R[46]]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[],[R[12]]]],[11,R[118],E,E,36,[[[T]],[T]]],[11,"cast",E,E,36,[[],[U]]],[11,R[119],E,E,36,[[[T]],[T]]],[11,R[120],E,E,36,[[],[U]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[122],E,E,56,[[],["i"]]],[11,R[11],E,E,56,[[[U]],[R[12]]]],[11,R[45],E,E,56,[[["self"]],[T]]],[11,R[18],E,E,56,[[["self"]],[R[46]]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[],[R[12]]]],[11,R[118],E,E,56,[[[T]],[T]]],[11,"cast",E,E,56,[[],[U]]],[11,R[119],E,E,56,[[[T]],[T]]],[11,R[120],E,E,56,[[],[U]]],[11,"into",E,E,57,[[],[U]]],[11,R[16],E,E,57,[[["self"]],[T]]],[11,R[17],E,E,57,[[[T],["self"]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[122],E,E,57,[[],["i"]]],[11,R[11],E,E,57,[[[U]],[R[12]]]],[11,R[45],E,E,57,[[["self"]],[T]]],[11,R[18],E,E,57,[[["self"]],[R[46]]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[],[R[12]]]],[11,R[118],E,E,57,[[[T]],[T]]],[11,"cast",E,E,57,[[],[U]]],[11,R[119],E,E,57,[[[T]],[T]]],[11,R[120],E,E,57,[[],[U]]],[11,"fmt","rand",E,3,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"clone",E,E,2,[[["self"]],[R[1]]]],[11,R[30],E,E,3,[[["self"]],["str"]]],[11,"cause",E,E,3,[[["self"]],[["option",["error"]],["error"]]]],[11,"eq",E,E,2,[[["self"],[R[1]]],["bool"]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,2,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"read",E,E,0,[[["self"]],[[R[12],[R[9],"error"]],["error"],[R[9]]]]],[11,"new",R[121],E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,R[128],E,E,49,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,49,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,49,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,49,[[["r"],["self"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,50,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,50,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,50,[[["r"],["self"]]]],[11,R[128],E,E,50,[[["b1"],["r"],["b2"]]]],[11,"new",E,E,51,[[["b1"],["b2"]],["self"]]],[11,R[103],E,E,51,[[["b1"],["b2"]],["self"]]],[11,"sample",E,E,51,[[["r"],["self"]],["duration"]]],[11,"sample",E,E,7,[[["r"],["self"]],["x"]]],[11,"sample",R[105],E,8,[[["r"],["self"]],["bool"]]],[11,"sample",R[123],E,11,[[["r"],["self"]],[R[9]]]],[11,"sample",R[110],E,12,[[["r"],["self"]],[R[9]]]],[11,"sample",R[105],E,13,[[["r"],["self"]]]],[11,"sample",E,E,14,[[["r"],["self"]]]],[11,"sample",E,E,15,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,16,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,17,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,18,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,19,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,45,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,20,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,21,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,46,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,22,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,23,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,24,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,25,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,26,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,27,[[["r"],["self"]],[["f64"],["vec",["f64"]]]]],[11,"sample",E,E,28,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,29,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f32x2"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f32x2"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f32x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f32x4"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f32x4"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f32x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f32x8"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f32x8"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f32x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f32x16"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f32x16"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f32x16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f64x2"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f64x2"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f64x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f64x4"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f64x4"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f64x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["f64x8"]]],[11,"sample",E,E,43,[[["r"],["self"]],["f64x8"]]],[11,"sample",E,E,44,[[["r"],["self"]],["f64x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u128"]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[9]]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i128"]]],[11,"sample",E,E,48,[[["r"],["self"]],["isize"]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[274]]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[275]]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[276]]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[278]]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[273]]]],[11,"sample",E,E,48,[[["r"],["self"]],[R[277]]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i16x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u16x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i32x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u32x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i16x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u16x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i64x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u64x2"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i32x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u32x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i16x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u16x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8x16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8x16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i64x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u64x4"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i32x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u32x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i16x16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u16x16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8x32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8x32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i64x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u64x8"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i32x16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u32x16"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i16x32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u16x32"]]],[11,"sample",E,E,48,[[["r"],["self"]],["i8x64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["u8x64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["__m64"]]],[11,"sample",E,E,48,[[["r"],["self"]],["__m128i"]]],[11,"sample",E,E,48,[[["r"],["self"]],["__m256i"]]],[11,"sample",E,E,48,[[["r"],["self"]],["char"]]],[11,"sample",E,E,42,[[["r"],["self"]],["char"]]],[11,"sample",E,E,48,[[["r"],["self"]],["bool"]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]]]],[11,"sample",E,E,48,[[["r"],["self"]],["option"]]],[11,"sample",E,E,48,[[["r"],["self"]],["wrapping"]]],[11,"len",R[114],E,55,[[["self"]],[R[9]]]],[11,"default",R[113],E,33,[[],["self"]]],[11,"default",E,E,54,[[],[R[129]]]],[11,"default",E,E,35,[[],["osrng"]]],[11,"eq",R[110],E,9,[[["self"],[R[109]]],["bool"]]],[11,"eq",R[127],E,36,[[[R[136]],["self"]],["bool"]]],[11,"from",R[121],E,7,[[["range"]],[R[130]]]],[11,"from",E,E,7,[[[R[272]]],[R[130]]]],[11,"from",R[127],E,36,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from",E,E,36,[[["vec",[R[9]]],[R[9]]],["self"]]],[11,"clone",R[121],E,7,[[["self"]],[R[130]]]],[11,"clone",E,E,49,[[["self"]],["uniformint"]]],[11,"clone",E,E,50,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,51,[[["self"]],["uniformduration"]]],[11,"clone",R[105],E,8,[[["self"]],[R[106]]]],[11,"clone",R[123],E,11,[[["self"]],["self"]]],[11,"clone",R[110],E,12,[[["self"]],[R[111]]]],[11,"clone",E,E,9,[[["self"]],[R[109]]]],[11,"clone",R[105],E,13,[[["self"]],[R[131]]]],[11,"clone",E,E,14,[[["self"]],[R[132]]]],[11,"clone",E,E,15,[[["self"]],["gamma"]]],[11,"clone",E,E,16,[[["self"]],[R[133]]]],[11,"clone",E,E,17,[[["self"]],["fisherf"]]],[11,"clone",E,E,18,[[["self"]],[R[255]]]],[11,"clone",E,E,19,[[["self"]],["beta"]]],[11,"clone",E,E,45,[[["self"]],[R[279]]]],[11,"clone",E,E,20,[[["self"]],["normal"]]],[11,"clone",E,E,21,[[["self"]],[R[134]]]],[11,"clone",E,E,46,[[["self"]],["exp1"]]],[11,"clone",E,E,22,[[["self"]],["exp"]]],[11,"clone",E,E,23,[[["self"]],["pareto"]]],[11,"clone",E,E,24,[[["self"]],["poisson"]]],[11,"clone",E,E,25,[[["self"]],[R[263]]]],[11,"clone",E,E,26,[[["self"]],["cauchy"]]],[11,"clone",E,E,27,[[["self"]],[R[112]]]],[11,"clone",E,E,28,[[["self"]],[R[135]]]],[11,"clone",E,E,29,[[["self"]],["weibull"]]],[11,"clone",E,E,43,[[["self"]],[R[271]]]],[11,"clone",E,E,44,[[["self"]],["open01"]]],[11,"clone",E,E,48,[[["self"]],["standard"]]],[11,"clone",R[125],E,32,[[["self"]],["reseedingrng"]]],[11,"clone",R[126],E,34,[[["self"]],["steprng"]]],[11,"clone",R[113],E,52,[[["self"]],["smallrng"]]],[11,"clone",E,E,53,[[["self"]],["stdrng"]]],[11,"clone",E,E,54,[[["self"]],[R[129]]]],[11,"clone",E,E,35,[[["self"]],["osrng"]]],[11,"clone",R[127],E,36,[[["self"]],[R[136]]]],[11,"clone",E,E,57,[[["self"]],[R[137]]]],[11,"next",R[105],E,47,[[["self"]],["option"]]],[11,R[138],E,E,47,[[["self"]]]],[11,"next",R[127],E,56,[[["self"]],[["option",[R[9]]],[R[9]]]]],[11,R[138],E,E,56,[[["self"]]]],[11,"next",E,E,57,[[["self"]],["option"]]],[11,R[138],E,E,57,[[["self"]]]],[11,"next",R[114],E,55,[[["self"]],["option"]]],[11,R[138],E,E,55,[[["self"]]]],[11,"fmt",R[121],E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,49,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,50,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,51,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[105],E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[123],E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[110],E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[105],E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,18,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,45,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,20,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,46,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,24,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,25,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,26,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,29,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,43,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,44,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,42,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,47,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,48,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[125],E,31,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,32,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[113],E,33,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[126],E,34,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[113],E,52,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,53,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,54,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,35,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[127],E,36,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,56,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,57,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[114],E,55,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[110],E,9,[[[R[29]],["self"]],[R[12]]]],[11,R[30],E,E,9,[[["self"]],["str"]]],[11,"cause",E,E,9,[[["self"]],[["option",["error"]],["error"]]]],[11,R[19],R[125],E,31,[[["self"]],["u32"]]],[11,R[20],E,E,31,[[["self"]],["u64"]]],[11,R[21],E,E,31,[[["self"]]]],[11,R[22],E,E,31,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,32,[[["self"]],["u32"]]],[11,R[20],E,E,32,[[["self"]],["u64"]]],[11,R[21],E,E,32,[[["self"]]]],[11,R[22],E,E,32,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],R[113],E,33,[[["self"]],["u32"]]],[11,R[20],E,E,33,[[["self"]],["u64"]]],[11,R[21],E,E,33,[[["self"]]]],[11,R[22],E,E,33,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],R[126],E,34,[[["self"]],["u32"]]],[11,R[20],E,E,34,[[["self"]],["u64"]]],[11,R[21],E,E,34,[[["self"]]]],[11,R[22],E,E,34,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],R[113],E,52,[[["self"]],["u32"]]],[11,R[20],E,E,52,[[["self"]],["u64"]]],[11,R[21],E,E,52,[[["self"]]]],[11,R[22],E,E,52,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,53,[[["self"]],["u32"]]],[11,R[20],E,E,53,[[["self"]],["u64"]]],[11,R[21],E,E,53,[[["self"]]]],[11,R[22],E,E,53,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,54,[[["self"]],["u32"]]],[11,R[20],E,E,54,[[["self"]],["u64"]]],[11,R[21],E,E,54,[[["self"]]]],[11,R[22],E,E,54,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,35,[[["self"]],["u32"]]],[11,R[20],E,E,35,[[["self"]],["u64"]]],[11,R[21],E,E,35,[[["self"]]]],[11,R[22],E,E,35,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,52,[[],["self"]]],[11,R[25],E,E,52,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,53,[[],["self"]]],[11,R[25],E,E,53,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[180],"rand",R[181],2,[[],["bool"]]],[11,R[182],E,R[183],2,[[],["bool"]]],[11,R[30],E,R[184],2,[[],["str"]]],[11,"new",E,R[185],3,[[[R[1]],["str"]],["error"]]],[11,R[186],E,R[187],3,[[["e"],[R[1]],["str"]],["error"]]],[11,R[188],E,R[189],3,[[["self"]],[["option",["box"]],["box",["error"]]]]]],"p":[[8,"RngCore"],[8,R[38]],[4,R[34]],[3,"Error"],[8,R[139]],[8,R[140]],[8,R[141]],[3,"Uniform"],[3,R[142]],[4,R[143]],[8,"Weight"],[3,R[107]],[3,R[107]],[3,R[144]],[3,R[145]],[3,"Gamma"],[3,R[146]],[3,"FisherF"],[3,R[235]],[3,"Beta"],[3,"Normal"],[3,R[147]],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,R[245]],[3,"Cauchy"],[3,R[148]],[3,R[149]],[3,"Weibull"],[8,R[150]],[3,"ReadRng"],[3,R[151]],[3,R[152]],[3,"StepRng"],[3,"OsRng"],[4,"IndexVec"],[8,R[153]],[8,R[154]],[8,"Rng"],[8,R[155]],[8,R[156]],[3,R[157]],[3,R[158]],[3,"Open01"],[3,R[159]],[3,"Exp1"],[3,R[208]],[3,R[210]],[3,R[160]],[3,R[161]],[3,R[162]],[3,"SmallRng"],[3,"StdRng"],[3,R[163]],[3,R[164]],[4,R[165]],[4,R[166]]]};
searchIndex[R[203]]={"doc":"Generating random samples from probability distributions.","i":[[8,R[150],R[203],R[204],N,N],[10,"sample",E,R[205],0,[[["r"],["self"]],[T]]],[11,R[116],E,R[206],0,[[["r"]],[R[207]]]],[3,R[208],E,R[209],N,N],[3,R[210],E,R[211],N,N],[3,R[157],E,R[212],N,N],[3,"Uniform",E,R[102],N,N],[3,R[158],E,R[101],N,N],[3,"Open01",E,R[101],N,N],[3,R[142],E,R[213],N,N],[0,"weighted",E,R[214],N,N],[0,R[215],R[223],R[216],N,N],[3,R[107],R[270],R[108],N,N],[8,"Weight",E,R[217],N,N],[18,"MAX",E,R[218],1,N],[18,"ZERO",E,R[219],1,N],[10,R[220],E,R[221],1,[[[R[9]]],["option"]]],[11,"sum",E,R[222],1,[[],["self"]]],[3,R[107],R[223],R[108],N,N],[4,R[143],E,R[224],N,N],[13,"NoItem",E,R[225],2,N],[13,R[226],E,R[227],2,N],[13,R[228],E,R[229],2,N],[3,R[144],R[203],R[230],N,N],[3,R[145],E,R[231],N,N],[3,"Gamma",E,R[232],N,N],[3,R[146],E,R[233],N,N],[3,"FisherF",E,R[234],N,N],[3,R[235],E,R[236],N,N],[3,"Beta",E,R[237],N,N],[3,"Normal",E,R[238],N,N],[3,R[147],E,R[239],N,N],[3,R[159],E,R[240],N,N],[3,"Exp",E,R[241],N,N],[3,"Exp1",E,R[242],N,N],[3,"Pareto",E,R[243],N,N],[3,"Poisson",E,R[244],N,N],[3,R[245],E,R[246],N,N],[3,"Cauchy",E,R[247],N,N],[3,R[148],E,R[248],N,N],[3,R[149],E,R[249],N,N],[3,"Weibull",E,R[250],N,N],[11,"new",E,R[251],3,[[["f64"]],["gamma"]]],[11,"new",E,R[252],4,[[["f64"]],[R[133]]]],[11,"new",E,R[253],5,[[["f64"]],["fisherf"]]],[11,"new",E,R[254],6,[[["f64"]],[R[255]]]],[11,"new",E,R[256],7,[[["f64"]],["beta"]]],[11,"new",E,R[257],8,[[["f64"]],["normal"]]],[11,"new",E,R[258],9,[[["f64"]],[R[134]]]],[11,"new",E,R[259],10,[[["f64"]],["exp"]]],[11,"new",E,R[260],11,[[["f64"]],["pareto"]]],[11,"new",E,R[261],12,[[["f64"]],["poisson"]]],[11,"new",E,R[262],13,[[["f64"],["u64"]],[R[263]]]],[11,"new",E,R[264],14,[[["f64"]],["cauchy"]]],[11,"new",E,R[265],15,[[["into",["vec"]],["vec",["f64"]]],[R[112]]]],[11,R[266],E,R[267],15,[[["f64"],[R[9]]],[R[112]]]],[11,"new",E,R[268],16,[[["f64"]],[R[135]]]],[11,"new",E,R[269],17,[[["f64"]],["weibull"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[122],E,E,18,[[],["i"]]],[11,R[11],E,E,18,[[[U]],[R[12]]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[R[46]]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[],[R[12]]]],[11,R[118],E,E,18,[[[T]],[T]]],[11,R[119],E,E,18,[[[T]],[T]]],[11,R[120],E,E,18,[[],[U]]],[11,"cast",E,E,18,[[],[U]]],[11,"into",E,E,19,[[],[U]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[17],E,E,19,[[[T],["self"]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[11],E,E,19,[[[U]],[R[12]]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[R[46]]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[],[R[12]]]],[11,R[118],E,E,19,[[[T]],[T]]],[11,R[119],E,E,19,[[[T]],[T]]],[11,R[120],E,E,19,[[],[U]]],[11,"cast",E,E,19,[[],[U]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[11],E,E,20,[[[U]],[R[12]]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[R[46]]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[],[R[12]]]],[11,R[118],E,E,20,[[[T]],[T]]],[11,R[119],E,E,20,[[[T]],[T]]],[11,R[120],E,E,20,[[],[U]]],[11,"cast",E,E,20,[[],[U]]],[11,"into",E,E,21,[[],[U]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[17],E,E,21,[[[T],["self"]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[11],E,E,21,[[[U]],[R[12]]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[R[46]]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[],[R[12]]]],[11,R[118],E,E,21,[[[T]],[T]]],[11,R[119],E,E,21,[[[T]],[T]]],[11,R[120],E,E,21,[[],[U]]],[11,"cast",E,E,21,[[],[U]]],[11,"into",E,E,22,[[],[U]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[17],E,E,22,[[[T],["self"]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[11],E,E,22,[[[U]],[R[12]]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[R[46]]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[],[R[12]]]],[11,R[118],E,E,22,[[[T]],[T]]],[11,R[119],E,E,22,[[[T]],[T]]],[11,R[120],E,E,22,[[],[U]]],[11,"cast",E,E,22,[[],[U]]],[11,"into",E,E,23,[[],[U]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[17],E,E,23,[[[T],["self"]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[11],E,E,23,[[[U]],[R[12]]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[18],E,E,23,[[["self"]],[R[46]]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[],[R[12]]]],[11,R[118],E,E,23,[[[T]],[T]]],[11,R[119],E,E,23,[[[T]],[T]]],[11,R[120],E,E,23,[[],[U]]],[11,"cast",E,E,23,[[],[U]]],[11,"into",E,E,24,[[],[U]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[17],E,E,24,[[[T],["self"]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[11],E,E,24,[[[U]],[R[12]]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[R[46]]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[],[R[12]]]],[11,R[118],E,E,24,[[[T]],[T]]],[11,R[119],E,E,24,[[[T]],[T]]],[11,R[120],E,E,24,[[],[U]]],[11,"cast",E,E,24,[[],[U]]],[11,"into",R[270],E,25,[[],[U]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[17],E,E,25,[[[T],["self"]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[11],E,E,25,[[[U]],[R[12]]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[R[46]]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[],[R[12]]]],[11,R[118],E,E,25,[[[T]],[T]]],[11,R[119],E,E,25,[[[T]],[T]]],[11,R[120],E,E,25,[[],[U]]],[11,"cast",E,E,25,[[],[U]]],[11,"into",R[223],E,26,[[],[U]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[17],E,E,26,[[[T],["self"]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[11],E,E,26,[[[U]],[R[12]]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[R[46]]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[],[R[12]]]],[11,R[118],E,E,26,[[[T]],[T]]],[11,R[119],E,E,26,[[[T]],[T]]],[11,R[120],E,E,26,[[],[U]]],[11,"cast",E,E,26,[[],[U]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[44],E,E,2,[[["self"]],["string"]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[46]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,R[118],E,E,2,[[[T]],[T]]],[11,R[119],E,E,2,[[[T]],[T]]],[11,R[120],E,E,2,[[],[U]]],[11,"cast",E,E,2,[[],[U]]],[11,"into",R[203],E,27,[[],[U]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[17],E,E,27,[[[T],["self"]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[11],E,E,27,[[[U]],[R[12]]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[R[46]]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[],[R[12]]]],[11,R[118],E,E,27,[[[T]],[T]]],[11,R[119],E,E,27,[[[T]],[T]]],[11,R[120],E,E,27,[[],[U]]],[11,"cast",E,E,27,[[],[U]]],[11,"into",E,E,28,[[],[U]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[17],E,E,28,[[[T],["self"]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[[U]],[R[12]]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[R[46]]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[],[R[12]]]],[11,R[118],E,E,28,[[[T]],[T]]],[11,R[119],E,E,28,[[[T]],[T]]],[11,R[120],E,E,28,[[],[U]]],[11,"cast",E,E,28,[[],[U]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[46]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[118],E,E,3,[[[T]],[T]]],[11,R[119],E,E,3,[[[T]],[T]]],[11,R[120],E,E,3,[[],[U]]],[11,"cast",E,E,3,[[],[U]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[46]]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,R[118],E,E,4,[[[T]],[T]]],[11,R[119],E,E,4,[[[T]],[T]]],[11,R[120],E,E,4,[[],[U]]],[11,"cast",E,E,4,[[],[U]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[46]]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,R[118],E,E,5,[[[T]],[T]]],[11,R[119],E,E,5,[[[T]],[T]]],[11,R[120],E,E,5,[[],[U]]],[11,"cast",E,E,5,[[],[U]]],[11,"into",E,E,6,[[],[U]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[46]]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,R[118],E,E,6,[[[T]],[T]]],[11,R[119],E,E,6,[[[T]],[T]]],[11,R[120],E,E,6,[[],[U]]],[11,"cast",E,E,6,[[],[U]]],[11,"into",E,E,7,[[],[U]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[46]]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,R[118],E,E,7,[[[T]],[T]]],[11,R[119],E,E,7,[[[T]],[T]]],[11,R[120],E,E,7,[[],[U]]],[11,"cast",E,E,7,[[],[U]]],[11,"into",E,E,8,[[],[U]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[46]]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,R[118],E,E,8,[[[T]],[T]]],[11,R[119],E,E,8,[[[T]],[T]]],[11,R[120],E,E,8,[[],[U]]],[11,"cast",E,E,8,[[],[U]]],[11,"into",E,E,9,[[],[U]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[46]]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,R[118],E,E,9,[[[T]],[T]]],[11,R[119],E,E,9,[[[T]],[T]]],[11,R[120],E,E,9,[[],[U]]],[11,"cast",E,E,9,[[],[U]]],[11,"into",E,E,29,[[],[U]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[17],E,E,29,[[[T],["self"]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[11],E,E,29,[[[U]],[R[12]]]],[11,R[45],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[R[46]]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[],[R[12]]]],[11,R[118],E,E,29,[[[T]],[T]]],[11,R[119],E,E,29,[[[T]],[T]]],[11,R[120],E,E,29,[[],[U]]],[11,"cast",E,E,29,[[],[U]]],[11,"into",E,E,10,[[],[U]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[46]]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,R[118],E,E,10,[[[T]],[T]]],[11,R[119],E,E,10,[[[T]],[T]]],[11,R[120],E,E,10,[[],[U]]],[11,"cast",E,E,10,[[],[U]]],[11,"into",E,E,30,[[],[U]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[17],E,E,30,[[[T],["self"]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[11],E,E,30,[[[U]],[R[12]]]],[11,R[45],E,E,30,[[["self"]],[T]]],[11,R[18],E,E,30,[[["self"]],[R[46]]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[],[R[12]]]],[11,R[118],E,E,30,[[[T]],[T]]],[11,R[119],E,E,30,[[[T]],[T]]],[11,R[120],E,E,30,[[],[U]]],[11,"cast",E,E,30,[[],[U]]],[11,"into",E,E,11,[[],[U]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[46]]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,R[118],E,E,11,[[[T]],[T]]],[11,R[119],E,E,11,[[[T]],[T]]],[11,R[120],E,E,11,[[],[U]]],[11,"cast",E,E,11,[[],[U]]],[11,"into",E,E,12,[[],[U]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[17],E,E,12,[[[T],["self"]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[[U]],[R[12]]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[R[46]]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[],[R[12]]]],[11,R[118],E,E,12,[[[T]],[T]]],[11,R[119],E,E,12,[[[T]],[T]]],[11,R[120],E,E,12,[[],[U]]],[11,"cast",E,E,12,[[],[U]]],[11,"into",E,E,13,[[],[U]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[17],E,E,13,[[[T],["self"]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[11],E,E,13,[[[U]],[R[12]]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[R[46]]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[],[R[12]]]],[11,R[118],E,E,13,[[[T]],[T]]],[11,R[119],E,E,13,[[[T]],[T]]],[11,R[120],E,E,13,[[],[U]]],[11,"cast",E,E,13,[[],[U]]],[11,"into",E,E,14,[[],[U]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[17],E,E,14,[[[T],["self"]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[[U]],[R[12]]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[R[46]]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[],[R[12]]]],[11,R[118],E,E,14,[[[T]],[T]]],[11,R[119],E,E,14,[[[T]],[T]]],[11,R[120],E,E,14,[[],[U]]],[11,"cast",E,E,14,[[],[U]]],[11,"into",E,E,15,[[],[U]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[17],E,E,15,[[[T],["self"]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[11],E,E,15,[[[U]],[R[12]]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[R[46]]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[],[R[12]]]],[11,R[118],E,E,15,[[[T]],[T]]],[11,R[119],E,E,15,[[[T]],[T]]],[11,R[120],E,E,15,[[],[U]]],[11,"cast",E,E,15,[[],[U]]],[11,"into",E,E,16,[[],[U]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[17],E,E,16,[[[T],["self"]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[11],E,E,16,[[[U]],[R[12]]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[R[46]]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[],[R[12]]]],[11,R[118],E,E,16,[[[T]],[T]]],[11,R[119],E,E,16,[[[T]],[T]]],[11,R[120],E,E,16,[[],[U]]],[11,"cast",E,E,16,[[],[U]]],[11,"into",E,E,17,[[],[U]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[17],E,E,17,[[[T],["self"]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[11],E,E,17,[[[U]],[R[12]]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[R[46]]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[],[R[12]]]],[11,R[118],E,E,17,[[[T]],[T]]],[11,R[119],E,E,17,[[[T]],[T]]],[11,R[120],E,E,17,[[],[U]]],[11,"cast",E,E,17,[[],[U]]],[11,"fmt",R[223],E,2,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"clone",E,E,26,[[["self"]],[R[111]]]],[11,"clone",R[203],E,22,[[["self"]],[R[271]]]],[11,"clone",E,E,24,[[["self"]],[R[106]]]],[11,"clone",E,E,23,[[["self"]],["open01"]]],[11,"clone",R[270],E,25,[[["self"]],[R[111]]]],[11,"clone",R[203],E,19,[[["self"]],["standard"]]],[11,"clone",E,E,21,[[["self"]],[R[130]]]],[11,"clone",R[223],E,2,[[["self"]],[R[109]]]],[11,"next",R[203],E,18,[[["self"]],["option"]]],[11,R[138],E,E,18,[[["self"]]]],[11,"fmt",R[223],E,26,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[203],E,18,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,23,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,19,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,21,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[223],E,2,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[203],E,24,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[270],E,25,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",R[203],E,20,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,"fmt",E,E,22,[[[R[29]],["self"]],[[R[12],["error"]],["error"]]]],[11,R[30],R[223],E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[["option",["error"]],["error"]]]],[11,"from",R[203],E,21,[[["range"]],[R[130]]]],[11,"from",E,E,21,[[[R[272]]],[R[130]]]],[11,"eq",R[223],E,2,[[["self"],[R[109]]],["bool"]]],[11,"sample",R[203],E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,23,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,23,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["i8"]]],[11,"sample",R[223],E,26,[[["r"],["self"]],[R[9]]]],[11,"sample",R[203],E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,22,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["u16"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,23,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,19,[[["r"],["self"]],["i32"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],[R[273]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,23,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["option"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["u32"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["u8"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,22,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],[R[274]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["__m256i"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,21,[[["r"],["self"]],["x"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["i64"]]],[11,"sample",E,E,23,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,22,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],[R[275]]]],[11,"sample",E,E,22,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],[R[276]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",R[270],E,25,[[["r"],["self"]],[R[9]]]],[11,"sample",R[203],E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["i128"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],[R[9]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,23,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,22,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,23,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["isize"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,23,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],[R[277]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,22,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,20,[[["r"],["self"]],["char"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,22,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],[R[278]]]],[11,"sample",E,E,22,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["u128"]]],[11,"sample",E,E,23,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["wrapping"]]],[11,"sample",E,E,19,[[["r"],["self"]],["i16"]]],[11,"sample",E,E,19,[[["r"],["self"]],["f32"]]],[11,"sample",E,E,19,[[["r"],["self"]],["__m128i"]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,19,[[["r"],["self"]],["__m64"]]],[11,"sample",E,E,19,[[["r"],["self"]],["char"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,19,[[["r"],["self"]],["simd"]]],[11,"sample",E,E,24,[[["r"],["self"]],["bool"]]],[11,"sample",E,E,19,[[["r"],["self"]],["bool"]]],[11,"sample",E,E,22,[[["r"],["self"]],["simd"]]],[11,"clone",E,E,27,[[["self"]],[R[131]]]],[11,"clone",E,E,28,[[["self"]],[R[132]]]],[11,"clone",E,E,3,[[["self"]],["gamma"]]],[11,"clone",E,E,4,[[["self"]],[R[133]]]],[11,"clone",E,E,5,[[["self"]],["fisherf"]]],[11,"clone",E,E,6,[[["self"]],[R[255]]]],[11,"clone",E,E,7,[[["self"]],["beta"]]],[11,"clone",E,E,29,[[["self"]],[R[279]]]],[11,"clone",E,E,8,[[["self"]],["normal"]]],[11,"clone",E,E,9,[[["self"]],[R[134]]]],[11,"clone",E,E,30,[[["self"]],["exp1"]]],[11,"clone",E,E,10,[[["self"]],["exp"]]],[11,"clone",E,E,11,[[["self"]],["pareto"]]],[11,"clone",E,E,12,[[["self"]],["poisson"]]],[11,"clone",E,E,13,[[["self"]],[R[263]]]],[11,"clone",E,E,14,[[["self"]],["cauchy"]]],[11,"clone",E,E,15,[[["self"]],[R[112]]]],[11,"clone",E,E,16,[[["self"]],[R[135]]]],[11,"clone",E,E,17,[[["self"]],["weibull"]]],[11,"fmt",E,E,27,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,28,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,4,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,5,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,6,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,7,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,29,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,8,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,30,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,10,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,11,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,12,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,13,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,14,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,15,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,16,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,17,[[[R[29]],["self"]],[R[12]]]],[11,"sample",E,E,27,[[["r"],["self"]]]],[11,"sample",E,E,28,[[["r"],["self"]]]],[11,"sample",E,E,3,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,4,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,5,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,6,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,7,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,29,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,8,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,9,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,30,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,10,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,11,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,12,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,13,[[["r"],["self"]],["u64"]]],[11,"sample",E,E,14,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,15,[[["r"],["self"]],[["f64"],["vec",["f64"]]]]],[11,"sample",E,E,16,[[["r"],["self"]],["f64"]]],[11,"sample",E,E,17,[[["r"],["self"]],["f64"]]],[11,"new",E,R[104],21,[[["b1"],["b2"]],[R[130]]]],[11,R[103],E,R[104],21,[[["b1"],["b2"]],[R[130]]]],[11,"new",E,R[280],24,[[["f64"]],[R[106]]]],[11,R[281],E,R[282],24,[[["u32"]],[R[106]]]],[11,"new",R[270],R[283],25,[[["vec"]],[[R[111]],[R[109]],[R[12],[R[111],R[109]]]]]],[11,"new",R[223],R[284],26,[[["i"]],[[R[12],[R[111],R[109]]],[R[111]],[R[109]]]]]],"p":[[8,R[150]],[8,"Weight"],[4,R[143]],[3,"Gamma"],[3,R[146]],[3,"FisherF"],[3,R[235]],[3,"Beta"],[3,"Normal"],[3,R[147]],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,R[245]],[3,"Cauchy"],[3,R[148]],[3,R[149]],[3,"Weibull"],[3,R[208]],[3,R[210]],[3,R[157]],[3,"Uniform"],[3,R[158]],[3,"Open01"],[3,R[142]],[3,R[107]],[3,R[107]],[3,R[144]],[3,R[145]],[3,R[159]],[3,"Exp1"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","i":[[3,R[60],"rand_hc",R[97],N,N],[3,R[61],E,"The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[46]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["hc128rng"]]],[11,"clone",E,E,1,[[["self"]],["hc128core"]]],[11,R[52],E,E,1,[[["self"]]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],E,"Create an HC-128 random number generator with a seed. The…",1,[[],["self"]]]],"p":[[3,R[60]],[3,R[61]]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os",R[167],N,N],[11,"new",E,R[168],0,[[],[[R[12],["osrng","error"]],["osrng"],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,"default",E,E,0,[[],["osrng"]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]]],"p":[[3,"OsRng"]]};
searchIndex[R[0]]={"doc":"Random number generation traits","i":[[3,"Error",R[0],R[169],N,N],[12,"kind",E,R[170],0,N],[12,"msg",E,R[171],0,N],[4,R[34],E,R[172],N,N],[13,R[173],E,R[174],1,N],[13,R[175],E,R[176],1,N],[13,R[177],E,R[178],1,N],[13,"NotReady",E,R[179],1,N],[11,R[180],E,R[181],1,[[],["bool"]]],[11,R[182],E,R[183],1,[[],["bool"]]],[11,R[30],E,R[184],1,[[],["str"]]],[11,"new",E,R[185],0,[[[R[1]],["str"]],["self"]]],[11,R[186],E,R[187],0,[[["e"],[R[1]],["str"]],["self"]]],[11,R[188],E,R[189],0,[[["self"]],[["option",["box"]],["box",[R[31]]]]]],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[3,R[35],R[15],R[2],N,N],[12,"core",E,R[3],2,N],[3,R[36],E,R[2],N,N],[12,"core",E,R[3],3,N],[8,R[37],E,"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",4,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",4,N],[10,R[52],E,"Generate a new block of results.",4,[[["self"]]]],[11,"new",E,R[4],2,[[["r"]],[R[27]]]],[11,"index",E,R[5],2,[[["self"]],[R[9]]]],[11,"reset",E,R[6],2,[[["self"]]]],[11,R[7],E,R[8],2,[[["self"],[R[9]]]]],[11,"new",E,R[4],3,[[["r"]],[R[28]]]],[11,"index",E,R[5],3,[[["self"]],[R[9]]]],[11,"reset",E,R[6],3,[[["self"]]]],[11,R[7],E,R[8],3,[[["self"],[R[9]]]]],[0,"impls",R[0],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[10],N,[[]]],[5,"fill_via_u64_chunks",E,R[10],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[0],"Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,"read_u64_into",E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[0],R[190],N,N],[10,R[19],E,R[191],5,[[["self"]],["u32"]]],[10,R[20],E,R[192],5,[[["self"]],["u64"]]],[10,R[21],E,R[193],5,[[["self"]]]],[10,R[22],E,R[194],5,[[["self"]],[[R[12],["error"]],["error"]]]],[8,R[195],E,R[196],N,N],[8,R[38],E,R[197],N,N],[16,"Seed",E,R[198],6,N],[10,R[23],E,R[199],6,[[],["self"]]],[11,R[24],E,R[200],6,[[["u64"]],["self"]]],[11,R[25],E,R[201],6,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[44],E,E,0,[[["self"]],["string"]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[46]]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",R[15],E,2,[[],[U]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[46]]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[46]]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,R[19],E,E,2,[[["self"]],["u32"]]],[11,R[20],E,E,2,[[["self"]],["u64"]]],[11,R[21],E,E,2,[[["self"]]]],[11,R[22],E,E,2,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,[[["self"]]]],[11,R[22],E,E,3,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,2,[[],["self"]]],[11,R[24],E,E,2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,3,[[],["self"]]],[11,R[24],E,E,3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,"eq",R[0],E,1,[[["self"],[R[1]]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",R[15],E,2,[[["self"]],[R[27]]]],[11,"clone",E,E,3,[[["self"]],[R[28]]]],[11,"fmt",R[0],E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[15],E,2,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[0],E,0,[[[R[29]],["self"]],[R[12]]]],[11,"read",E,E,5,[[["self"]],[[R[9]],[R[12],[R[9],"error"]],["error"]]]],[11,R[30],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[31]],["option",[R[31]]]]]],[11,R[32],R[15],E,2,[[["__s"],["self"]],[R[12]]]],[11,R[32],E,E,3,[[["__s"],["self"]],[R[12]]]],[11,R[33],E,E,2,[[["__d"]],[R[12]]]],[11,R[33],E,E,3,[[["__d"]],[R[12]]]]],"p":[[3,"Error"],[4,R[34]],[3,R[35]],[3,R[36]],[8,R[37]],[8,"RngCore"],[8,R[38]]]};
searchIndex[R[202]]={"doc":E,"i":[[5,"generate_from_seed",R[202],E,N,[[["u32"]],["i32"]]],[5,"generate_from_os_rand",E,E,N,[[],["i32"]]],[5,"generate_from_entropy",E,E,N,[[],["i32"]]],[0,"tests",E,E,N,N],[5,"__wbg_test_generate_from_seed_0","rand_wasm_bindgen_test::tests",E,N,[[]]],[5,"__wbg_test_generate_from_os_rand_1",E,E,N,[[]]],[5,"__wbg_test_generate_from_entropy_2",E,E,N,[[]]]],"p":[]};
searchIndex[R[39]]={"doc":"Non-physical true random number generator based on timing…","i":[[3,R[43],R[39],"A true random number generator based on jitter in the CPU…",N,N],[4,R[42],E,"An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer",E,"No timer available.",0,N],[13,"CoarseTimer",E,"Timer too coarse to use as an entropy source.",0,N],[13,"NotMonotonic",E,"Timer is not monotonically increasing.",0,N],[13,"TinyVariantions",E,"Variations of deltas of time too small.",0,N],[13,"TooManyStuck",E,"Too many stuck results (indicating no added entropy).",0,N],[11,"new",E,"Create a new `JitterRng`. Makes use of `std::time` for a…",1,[[],[[R[40]],[R[41]],[R[12],[R[40],R[41]]]]]],[11,"new_with_timer",E,"Create a new `JitterRng`. A custom timer can be supplied,…",1,[[],[R[40]]]],[11,"set_rounds",E,"Configures how many rounds are used to generate each…",1,[[["self"],["u8"]]]],[11,"test_timer",E,"Basic quality tests on the timer, by measuring CPU timing…",1,[[["self"]],[["u8"],[R[41]],[R[12],["u8",R[41]]]]]],[11,"timer_stats",E,"Statistical test: return the timer delta of one normal run…",1,[[["self"],["bool"]],["i64"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[46]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[44],E,E,0,[[["self"]],["string"]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"eq",E,E,0,[[[R[41]],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[41]]]],[11,"clone",E,E,1,[[["self"]],[R[40]]]],[11,R[30],E,E,0,[[["self"]],["str"]]],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,[[["self"]]]],[11,R[22],E,E,1,[[["self"]],[["error"],[R[12],["error"]]]]]],"p":[[4,R[42]],[3,R[43]]]};
searchIndex[R[47]]={"doc":"The xorshift random number generator.","i":[[3,R[48],R[47],"An Xorshift random number generator.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["xorshiftrng"]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[32],E,E,0,[[["__s"],["self"]],[R[12]]]],[11,R[33],E,E,0,[[["__d"]],[R[12]]]]],"p":[[3,R[48]]]};
searchIndex[R[49]]={"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac",R[49],"The ISAAC random number generator.",N,N],[3,R[56],R[50],"A random number generator that uses the ISAAC algorithm.",N,N],[3,R[57],E,"The core of [`IsaacRng`], used with [`BlockRng`].",N,N],[0,"isaac64",R[49],"The ISAAC-64 random number generator.",N,N],[3,R[58],R[51],"A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,R[59],E,"The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"from",R[50],E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[46]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",R[51],E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[46]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[46]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,"fmt",R[50],E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",R[51],E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[[R[29]],["self"]],[R[12]]]],[11,"clone",R[50],E,0,[[["self"]],["isaacrng"]]],[11,"clone",E,E,1,[[["self"]],["isaaccore"]]],[11,"clone",R[51],E,2,[[["self"]],["isaac64rng"]]],[11,"clone",E,E,3,[[["self"]],["isaac64core"]]],[11,R[52],R[50],R[53],1,[[["self"],[R[54]]]]],[11,R[52],R[51],R[53],3,[[["self"],[R[54]]]]],[11,R[19],R[50],E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],R[51],E,2,[[["self"]],["u32"]]],[11,R[20],E,E,2,[[["self"]],["u64"]]],[11,R[21],E,E,2,[[["self"]]]],[11,R[22],E,E,2,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],R[50],E,0,[[],["self"]]],[11,R[24],E,R[55],0,[[["u64"]],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,1,[[],["self"]]],[11,R[24],E,R[55],1,[[["u64"]],["self"]]],[11,R[25],E,E,1,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],R[51],E,2,[[],["self"]]],[11,R[24],E,R[55],2,[[["u64"]],["self"]]],[11,R[25],E,E,2,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,3,[[],["self"]]],[11,R[24],E,E,3,[[["u64"]],["self"]]],[11,R[25],E,E,3,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[32],R[50],E,0,[[["__s"],["self"]],[R[12]]]],[11,R[32],E,E,1,[[["__s"],["self"]],[R[12]]]],[11,R[32],R[51],E,2,[[["__s"],["self"]],[R[12]]]],[11,R[32],E,E,3,[[["__s"],["self"]],[R[12]]]],[11,R[33],R[50],E,0,[[["__d"]],[R[12]]]],[11,R[33],E,E,1,[[["__d"]],[R[12]]]],[11,R[33],R[51],E,2,[[["__d"]],[R[12]]]],[11,R[33],E,E,3,[[["__d"]],[R[12]]]]],"p":[[3,R[56]],[3,R[57]],[3,R[58]],[3,R[59]]]};
searchIndex[R[62]]={"doc":"This crate implements the [xoshiro] family of pseudorandom…","i":[[3,R[90],R[62],"A splitmix64 random number generator.",N,N],[3,R[82],E,"A xoshiro128** random number generator.",N,N],[3,R[83],E,"A xoshiro128+ random number generator.",N,N],[3,R[84],E,"A xoshiro256** random number generator.",N,N],[3,R[85],E,"A xoshiro256+ random number generator.",N,N],[3,"Seed512",E,"512-bit seed for a generator.",N,N],[12,"0",E,E,0,N],[3,R[86],E,"A xoshiro512** random number generator.",N,N],[3,R[87],E,"A xoshiro512+ random number generator.",N,N],[3,R[88],E,"A xoroshiro128+ random number generator.",N,N],[3,R[89],E,"A xoroshiro128** random number generator.",N,N],[3,R[91],E,"A Xoroshiro64** random number generator.",N,N],[3,R[92],E,"A xoroshiro64* random number generator.",N,N],[11,"iter",E,"Return an iterator over the seed.",0,[[["self"]],[["u8"],["iter",["u8"]]]]],[11,"jump",E,R[63],1,[[["self"]]]],[11,"jump",E,R[63],2,[[["self"]]]],[11,"jump",E,R[64],3,[[["self"]]]],[11,R[65],E,R[66],3,[[["self"]]]],[11,"jump",E,R[64],4,[[["self"]]]],[11,R[65],E,R[66],4,[[["self"]]]],[11,"jump",E,R[67],5,[[["self"]]]],[11,"jump",E,R[67],6,[[["self"]]]],[11,"jump",E,R[68],7,[[["self"]]]],[11,R[65],E,R[69],7,[[["self"]]]],[11,"jump",E,R[68],8,[[["self"]]]],[11,R[65],E,R[69],8,[[["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[[U]],[R[12]]]],[11,R[14],E,E,9,[[],[R[12]]]],[11,"into",E,E,9,[[],[U]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[R[46]]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[17],E,E,9,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[46]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[[U]],[R[12]]]],[11,R[14],E,E,2,[[],[R[12]]]],[11,"into",E,E,2,[[],[U]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[R[46]]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[[T],["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[[U]],[R[12]]]],[11,R[14],E,E,3,[[],[R[12]]]],[11,"into",E,E,3,[[],[U]]],[11,R[45],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[R[46]]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,[[[T],["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[[U]],[R[12]]]],[11,R[14],E,E,4,[[],[R[12]]]],[11,"into",E,E,4,[[],[U]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[R[46]]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[17],E,E,4,[[[T],["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[11],E,E,5,[[[U]],[R[12]]]],[11,R[14],E,E,5,[[],[R[12]]]],[11,"into",E,E,5,[[],[U]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[R[46]]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[17],E,E,5,[[[T],["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[[U]],[R[12]]]],[11,R[14],E,E,6,[[],[R[12]]]],[11,"into",E,E,6,[[],[U]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[R[46]]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[17],E,E,6,[[[T],["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[11],E,E,7,[[[U]],[R[12]]]],[11,R[14],E,E,7,[[],[R[12]]]],[11,"into",E,E,7,[[],[U]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[R[46]]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[17],E,E,7,[[[T],["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[11],E,E,8,[[[U]],[R[12]]]],[11,R[14],E,E,8,[[],[R[12]]]],[11,"into",E,E,8,[[],[U]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[R[46]]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,8,[[[T],["self"]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[11],E,E,10,[[[U]],[R[12]]]],[11,R[14],E,E,10,[[],[R[12]]]],[11,"into",E,E,10,[[],[U]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[R[46]]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[17],E,E,10,[[[T],["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[[U]],[R[12]]]],[11,R[14],E,E,11,[[],[R[12]]]],[11,"into",E,E,11,[[],[U]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[R[46]]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[17],E,E,11,[[[T],["self"]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,9,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,5,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,6,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,8,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,10,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,11,[[["self"],[R[29]]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],[R[75]]]],[11,"clone",E,E,9,[[["self"]],[R[70]]]],[11,"clone",E,E,1,[[["self"]],[R[71]]]],[11,"clone",E,E,2,[[["self"]],[R[72]]]],[11,"clone",E,E,3,[[["self"]],[R[73]]]],[11,"clone",E,E,4,[[["self"]],[R[74]]]],[11,"clone",E,E,5,[[["self"]],[R[76]]]],[11,"clone",E,E,6,[[["self"]],[R[77]]]],[11,"clone",E,E,7,[[["self"]],[R[78]]]],[11,"clone",E,E,8,[[["self"]],[R[79]]]],[11,"clone",E,E,10,[[["self"]],[R[80]]]],[11,"clone",E,E,11,[[["self"]],[R[81]]]],[11,"default",E,E,0,[[],[R[75]]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,R[19],E,E,9,[[["self"]],["u32"]]],[11,R[20],E,E,9,[[["self"]],["u64"]]],[11,R[21],E,E,9,[[["self"]]]],[11,R[22],E,E,9,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,[[["self"]]]],[11,R[22],E,E,1,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,2,[[["self"]],["u32"]]],[11,R[20],E,E,2,[[["self"]],["u64"]]],[11,R[21],E,E,2,[[["self"]]]],[11,R[22],E,E,2,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,3,[[["self"]],["u32"]]],[11,R[20],E,E,3,[[["self"]],["u64"]]],[11,R[21],E,E,3,[[["self"]]]],[11,R[22],E,E,3,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,4,[[["self"]],["u32"]]],[11,R[20],E,E,4,[[["self"]],["u64"]]],[11,R[21],E,E,4,[[["self"]]]],[11,R[22],E,E,4,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,5,[[["self"]],["u32"]]],[11,R[20],E,E,5,[[["self"]],["u64"]]],[11,R[21],E,E,5,[[["self"]]]],[11,R[22],E,E,5,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,6,[[["self"]],["u32"]]],[11,R[20],E,E,6,[[["self"]],["u64"]]],[11,R[21],E,E,6,[[["self"]]]],[11,R[22],E,E,6,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,7,[[["self"]],["u32"]]],[11,R[20],E,E,7,[[["self"]],["u64"]]],[11,R[21],E,E,7,[[["self"]]]],[11,R[22],E,E,7,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,8,[[["self"]],["u32"]]],[11,R[20],E,E,8,[[["self"]],["u64"]]],[11,R[21],E,E,8,[[["self"]]]],[11,R[22],E,E,8,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,10,[[["self"]],["u32"]]],[11,R[20],E,E,10,[[["self"]],["u64"]]],[11,R[21],E,E,10,[[["self"]]]],[11,R[22],E,E,10,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[19],E,E,11,[[["self"]],["u32"]]],[11,R[20],E,E,11,[[["self"]],["u64"]]],[11,R[21],E,E,11,[[["self"]]]],[11,R[22],E,E,11,[[["self"]],[[R[12],["error"]],["error"]]]],[11,R[23],E,"Create a new `SplitMix64`.",9,[[],[R[70]]]],[11,R[24],E,"Seed a `SplitMix64` from a `u64`.",9,[[["u64"]],[R[70]]]],[11,R[23],E,"Create a new `Xoshiro128StarStar`. If `seed` is entirely…",1,[[],[R[71]]]],[11,R[24],E,"Seed a `Xoshiro128StarStar` from a `u64` using `SplitMix64`.",1,[[["u64"]],[R[71]]]],[11,R[23],E,"Create a new `Xoshiro128Plus`. If `seed` is entirely 0, it…",2,[[],[R[72]]]],[11,R[24],E,"Seed a `Xoshiro128Plus` from a `u64` using `SplitMix64`.",2,[[["u64"]],[R[72]]]],[11,R[23],E,"Create a new `Xoshiro256StarStar`. If `seed` is entirely…",3,[[],[R[73]]]],[11,R[24],E,"Seed a `Xoshiro256StarStar` from a `u64` using `SplitMix64`.",3,[[["u64"]],[R[73]]]],[11,R[23],E,"Create a new `Xoshiro256Plus`. If `seed` is entirely 0, it…",4,[[],[R[74]]]],[11,R[24],E,"Seed a `Xoshiro256Plus` from a `u64` using `SplitMix64`.",4,[[["u64"]],[R[74]]]],[11,R[23],E,"Create a new `Xoshiro512StarStar`. If `seed` is entirely…",5,[[[R[75]]],[R[76]]]],[11,R[24],E,"Seed a `Xoshiro512StarStar` from a `u64` using `SplitMix64`.",5,[[["u64"]],[R[76]]]],[11,R[23],E,"Create a new `Xoshiro512Plus`. If `seed` is entirely 0, it…",6,[[[R[75]]],[R[77]]]],[11,R[24],E,"Seed a `Xoshiro512Plus` from a `u64` using `SplitMix64`.",6,[[["u64"]],[R[77]]]],[11,R[23],E,"Create a new `Xoroshiro128Plus`. If `seed` is entirely 0,…",7,[[],[R[78]]]],[11,R[24],E,"Seed a `Xoroshiro128Plus` from a `u64` using `SplitMix64`.",7,[[["u64"]],[R[78]]]],[11,R[23],E,"Create a new `Xoroshiro128StarStar`. If `seed` is entirely…",8,[[],[R[79]]]],[11,R[24],E,"Seed a `Xoroshiro128StarStar` from a `u64` using…",8,[[["u64"]],[R[79]]]],[11,R[23],E,"Create a new `Xoroshiro64StarStar`. If `seed` is entirely…",10,[[],[R[80]]]],[11,R[24],E,"Seed a `Xoroshiro64StarStar` from a `u64`.",10,[[["u64"]],[R[80]]]],[11,R[23],E,"Create a new `Xoroshiro64Star`. If `seed` is entirely 0,…",11,[[],[R[81]]]],[11,R[24],E,"Seed a `Xoroshiro64Star` from a `u64` using `SplitMix64`.",11,[[["u64"]],[R[81]]]]],"p":[[3,"Seed512"],[3,R[82]],[3,R[83]],[3,R[84]],[3,R[85]],[3,R[86]],[3,R[87]],[3,R[88]],[3,R[89]],[3,R[90]],[3,R[91]],[3,R[92]]]};
searchIndex[R[93]]={"doc":"The ChaCha random number generator.","i":[[3,R[95],R[93],R[97],N,N],[3,R[96],E,"The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos",E,"Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos",E,"Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream",E,"Set the stream number.",0,[[["self"],["u64"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[46]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"from",E,E,0,[[[R[94]]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["chacharng"]]],[11,"clone",E,E,1,[[["self"]],[R[94]]]],[11,R[52],E,E,1,[[["self"]]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[25],E,E,0,[[[R[26]]],[[R[12],["error"]],["error"]]]],[11,R[23],E,E,1,[[],["self"]]]],"p":[[3,R[95]],[3,R[96]]]};
searchIndex[R[98]]={"doc":"The PCG random number generators.","i":[[3,R[99],R[98],"A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,R[100],E,"A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new",E,"Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new",E,"Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32",E,"`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg",E,"A friendly name for `Mcg128Xsl64`.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[[U]],[R[12]]]],[11,R[14],E,E,0,[[],[R[12]]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[R[46]]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[[U]],[R[12]]]],[11,R[14],E,E,1,[[],[R[12]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[R[46]]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[[T],["self"]]]],[11,"fmt",E,E,0,[[[R[29]],["self"]],[R[12]]]],[11,"fmt",E,E,1,[[[R[29]],["self"]],[R[12]]]],[11,"clone",E,E,0,[[["self"]],["lcg64xsh32"]]],[11,"clone",E,E,1,[[["self"]],["mcg128xsl64"]]],[11,R[19],E,E,0,[[["self"]],["u32"]]],[11,R[20],E,E,0,[[["self"]],["u64"]]],[11,R[21],E,E,0,[[["self"]]]],[11,R[22],E,E,0,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[19],E,E,1,[[["self"]],["u32"]]],[11,R[20],E,E,1,[[["self"]],["u64"]]],[11,R[21],E,E,1,[[["self"]]]],[11,R[22],E,E,1,[[["self"]],[["error"],[R[12],["error"]]]]],[11,R[23],E,E,0,[[],["self"]]],[11,R[23],E,E,1,[[],["self"]]],[11,R[32],E,E,0,[[["__s"],["self"]],[R[12]]]],[11,R[32],E,E,1,[[["__s"],["self"]],[R[12]]]],[11,R[33],E,E,0,[[["__d"]],[R[12]]]],[11,R[33],E,E,1,[[["__d"]],[R[12]]]]],"p":[[3,R[99]],[3,R[100]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);